#!/usr/bin/python3
# SPDX-License-Identifier: GPL-2.0-or-later
# SPDX-FileCopyrightText: 2005-2016 System76, Inc.

"""
Test Airplane Mode workaround.
"""

import time
import argparse
import os
import sys
import logging

from gi.repository import GLib

import system76driver
from system76driver import daemon

start_time = time.monotonic()

logging.basicConfig(
    level=logging.DEBUG,
    style='{',
    format='{asctime}  {levelname}  {message}',
)
log = logging.getLogger()

parser = argparse.ArgumentParser()
parser.add_argument('--model', help='force model rather than detecting it')
parser.add_argument('--debug', action='store_true', default=False,
    help='print loaded modules',
)
args = parser.parse_args()

if os.getuid() != 0:
    sys.exit('Error: system76-daemon must be run as root')
log.info('**** Process start at monotonic time %r', start_time)

if not args.model:
    model = daemon.load_json_conf('/etc/system76-daemon.json').get('model')
    args.model = (model or system76driver.get_product_version())
log.info('model: %r', args.model)
brightness = daemon.run_brightness(args.model)
airplane = daemon.run_airplane(args.model)
acpi = daemon.run_firmware_acpi_interrupt(args.model)
ess_dac_autoswitch = daemon.run_ess_dac_autoswitch(args.model)
daemon.run_headphone_volume_adjust(args.model)
daemon.run_dpcd_pwm(args.model)
tdp = daemon.run_limit_power_draw(args.model)

mainloop = GLib.MainLoop()
if args.debug:
    names = sorted(sys.modules)
    for name in names:
        print(name)
    print(len(names))
mainloop.run()
